{"version":3,"sources":["TodoItem.js","todosData.js","add.js","App.js","index.js"],"names":["TodoItem","props","month","item","date","toLocaleString","day","year","getFullYear","className","type","checked","completed","onChange","handleChange","id","style","fontStyle","color","textDecoration","text","priority","height","fontSize","cursor","onClick","handlePriority","icon","faTrashAlt","value","handledel","todosData","Date","Add","d","m","getMonth","a","getDate","useState","enteredTodo","setEnteredTodo","enteredDate","setEnteredDate","onSubmit","event","preventDefault","newTodo","onSaveTodo","placeholder","target","required","min","console","log","App","handleselect","setState","prevState","todos","sort","b","optionsState","saveNewTodo","newTodos","Math","random","toString","updatedTodos","state","filter","todo","bind","this","map","todoItems","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a385f083.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faTrashAlt} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nfunction TodoItem(props) {\r\n    const completedStyle = {\r\n        fontStyle: \"italic\",\r\n        color: \"#cdcdcd\",\r\n        textDecoration: \"line-through\",\r\n        \r\n    }\r\n    const on= {\r\n        color: \"#f2e35c\",\r\n        height:\"32px\",\r\n        fontSize:\"20px\",\r\n        cursor: \"pointer\"\r\n      }\r\n    const off={\r\n        color: \"#ccc\",\r\n        cursor: \"pointer\"\r\n      }\r\n    const month = props.item.date.toLocaleString('en-US', { month: 'short' });\r\n    const day = props.item.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = props.item.date.getFullYear();\r\n    \r\n    return (\r\n        \r\n        <div className=\"todo-item\">\r\n            <div className=\"todo-item_description\">\r\n                \r\n                <input \r\n                    type=\"checkbox\" \r\n                    checked={props.item.completed} \r\n                    onChange={() => props.handleChange(props.item.id)}\r\n                /> \r\n                <h5  style={props.item.completed ? completedStyle: null}>{props.item.text}</h5>\r\n\r\n            </div>\r\n            \r\n            <div>\r\n                <span style={props.item.priority ? on: off} onClick={()=>props.handlePriority(props.item.id)}>&#9733;</span>\r\n                <FontAwesomeIcon icon={faTrashAlt} style={{cursor : \"pointer\"}} className=\"delete\" type=\"submit\" value=\"delete\" onClick={()=>props.handledel(props.item.id)}/>            \r\n\r\n            </div>\r\n            <div className='todo-date'>\r\n                <div className='todo-date__month'>{month}</div>\r\n                <div className='todo-date__year'>{year}</div>\r\n                <div className='todo-date__day'>{day}</div>\r\n            </div>\r\n                        \r\n         </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default TodoItem","\r\nconst todosData = [\r\n    {\r\n        id: 1,\r\n        text: \"Take out the trash\",\r\n        date:new Date('2021,12,12 00:00'),\r\n        completed: true,\r\n        priority: true\r\n    },\r\n    {\r\n        id: 2,\r\n        text: \"Grocery shopping\",\r\n        date:new Date('2021,12,13 00:00'),\r\n        completed: false,\r\n        priority: true\r\n    },\r\n    {\r\n        id: 3,\r\n        text: \"Clean gecko tank\",\r\n        date:new Date('2021,12,10 00:00'),\r\n        completed: false,\r\n        priority: true\r\n    },\r\n    {\r\n        id: 4,\r\n        text: \"Mow lawn\",\r\n        date:new Date('2021,12,22 00:00'),\r\n        completed: true,\r\n        priority: false\r\n    },\r\n    {\r\n        id: 5,\r\n        text: \"Catch up on Arrested Development\",\r\n        date:new Date('2021,12,31 00:00'),\r\n        completed: false,\r\n        priority: true\r\n    }\r\n]\r\n\r\nexport default todosData","import React,{useState} from \"react\"\r\nconst Add =(props)=>{\r\n    const d= new Date();\r\n    const m= d.getMonth()+1;\r\n    const a= d.getFullYear()+'-'+m+'-'+d.getDate();\r\n\r\n    const [enteredTodo,setEnteredTodo]=useState('');\r\n    const [enteredDate,setEnteredDate]=useState(a);\r\n    const submitHandler=(event)=>{\r\n        event.preventDefault();\r\n        const newTodo ={\r\n            text:enteredTodo,\r\n            date: new Date(`${enteredDate} 00:00`)\r\n        };\r\n        props.onSaveTodo(newTodo);\r\n        setEnteredTodo('');\r\n        setEnteredDate(a);\r\n    }\r\n    const todoChangeHandler=(event)=>{\r\n        setEnteredTodo(event.target.value);\r\n    }\r\n    const DateChangeHandler= (event) => {\r\n        setEnteredDate(event.target.value);\r\n        console.log(enteredDate);\r\n    }\r\n    return(\r\n        <form  onSubmit={submitHandler}>\r\n            <input type='text'\r\n                placeholder='Add a to-do'\r\n                value ={enteredTodo}\r\n                onChange={todoChangeHandler} required/>\r\n            <input \r\n                type='date'\r\n                value={enteredDate}\r\n                min='2021-01-01'\r\n                onChange={DateChangeHandler}/>           \r\n            <button type='submit'> + </button>\r\n        </form>\r\n        \r\n        \r\n    );\r\n}\r\nexport default Add;","import React from \"react\"\nimport TodoItem from \"./TodoItem\"\nimport todosData from \"./todosData\"\nimport Add from \"./add\"\nimport \"./style.css\"\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            todos: todosData,\n            optionsState:''\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handlePriority = this.handlePriority.bind(this)\n    }\n    handleselect=(event)=>{\n        if (event.target.value === \"date\") {\n            this.setState(prevState => {\n                const updatedTodos = prevState.todos.sort(function(a, b) {\n                    var c = new Date(a.date);\n                    var d = new Date(b.date);\n                    return c-d;            \n                })\n                return {\n                    todos: updatedTodos,\n                    optionsState:event.target.value\n                }\n            \n            })\n        }else if(event.target.value === \"priority\"){\n            this.setState(prevState => {\n                const updatedTodos = prevState.todos.sort(function(a, b) {\n                    return b.priority-a.priority;            \n                })\n                return {\n                    todos: updatedTodos,\n                    optionsState:event.target.value\n                }\n            \n            })\n        }else{\n\n            this.setState(prevState=>{\n                return{\n                    todos:prevState.todos,\n                    optionsState:event.target.value\n                }\n                \n            })\n        }\n    }   \n    \n    \n    handleChange(id) {\n        this.setState(prevState => {\n            const updatedTodos = prevState.todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed\n                }\n                return todo\n            })\n            return {\n                todos: updatedTodos,\n                optionsState: prevState.optionsState\n            }\n        })\n    }\n    handlePriority(id){\n        this.setState(prevState => {\n            const updatedTodos = prevState.todos.map(todo => {\n                if (todo.id === id) {\n                    todo.priority = !todo.priority\n                }\n                return todo\n            })\n            return {\n                todos: updatedTodos,\n                optionsState: prevState.optionsState\n            }\n        })\n    }\n    saveNewTodo=(enteredTodo)=>{\n        const newTodos={\n            ...enteredTodo,\n            id:Math.random().toString(),\n            completed:false,\n            priority: false\n        };\n        \n        this.setState(prevState => {\n            const updatedTodos = [\n                ...prevState.todos,\n                newTodos\n            ]\n            return{\n                todos: updatedTodos,\n                optionsState:''\n            }\n        })\n    }\n    handledel=(id)=>{\n        const updatedTodos= this.state.todos.filter((todo)=>todo.id!==id);\n        this.setState(prevState => {\n            return{\n                todos:updatedTodos,\n                optionsState:prevState.optionsState\n            }\n        })\n    }\n    \n    render() {\n        const todoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item} handleChange={this.handleChange}\n        handledel={this.handledel} handlePriority={this.handlePriority}/>)\n        \n        return (\n            <div>\n                \n                <div className=\"todo-list\">\n                    <div className=\"upperP\">\n                        <Add  onSaveTodo={this.saveNewTodo}/>\n                        \n                        <select className=\"sortList\"value= {this.state.optionsState} onChange={this.handleselect}>\n                            <option value=''>Sort by</option>\n                            <option value='date'>By Date</option>\n                            <option value='priority'>By Priority</option>\n                        </select>\n                    </div>\n                    \n                    {todoItems}\n                </div>\n            </div>\n            \n        )    \n    }\n}\n\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\n\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}